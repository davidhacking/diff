diff --git a/test_diff.txt b/test_diff.txt
index 1b77554..80c1b41 100644
--- a/test_diff.txt
+++ b/test_diff.txt
@@ -1,5 +1,19 @@
 package com.neusoft.modules.infomt.web;
 
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
 import com.google.common.collect.Lists;
 import com.neusoft.common.config.Global;
 import com.neusoft.common.persistence.Page;
@@ -39,18 +53,6 @@ import com.neusoft.modules.itembank.service.PaperRecordService;
 import com.neusoft.modules.itembank.service.PaperService;
 import com.neusoft.modules.sys.entity.User;
 import com.neusoft.modules.sys.utils.UserUtils;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Controller;
-import org.springframework.ui.Model;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RequestParam;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
 
 /**
  * @Description 安全教育FrontController
@@ -243,12 +245,6 @@ public class BackEndItembankController extends BaseController {
 			@RequestParam(required = false, defaultValue = "1") Integer pageNo,
 			@RequestParam(required = false, defaultValue = "100") Integer pageSize, HttpServletRequest request,
 			HttpServletResponse response, Model model) {
-		Boolean isMobile = UserUtils.getPrincipal().isMobileLogin();
-
-		// Added by HongYang @ 20161123
-		HashMap<String,Object> map = new HashMap<String,Object>();
-
-
 		int courseNum = 0;
 		Curriculum courseQuery = new Curriculum();
 		courseQuery.setName(courseNameQuery);
@@ -285,7 +281,6 @@ public class BackEndItembankController extends BaseController {
 					page.getList().get(i).setStudyStatus("已学习");
 					haveStudied++;
 				}
-
 				int countCredential = Integer.parseInt(credentialService.getCountCredentialRecordByUserIdCurriculumId(
 						UserUtils.getUser().getId(), page.getList().get(i).getId()));
 				System.out.println("UserUtils.getUser().getId(), page.getList().get(i).getId(): "
@@ -311,7 +306,6 @@ public class BackEndItembankController extends BaseController {
 		model.addAttribute("studying", studying);
 		model.addAttribute("haveStudied", haveStudied);
 		model.addAttribute("hasCredential", hasCredential);
-
 		List<CurrickumClassify> list = ItembankUtils.getCurrickumClassifyList("");
 		List<CurrickumClassifyType> currickum_classify_type_num_list = ItembankUtils.getCurrickumClassifyTypeNumMap();
 		Map<String, String> currickumClassifyType_map = new HashMap<String, String>();
@@ -322,12 +316,13 @@ public class BackEndItembankController extends BaseController {
 				courseNum += Integer.parseInt(item.getCountType());
 			}
 		}
-
 		// 课程类型
 		model.addAttribute("list", list);
 		// 类型数量
 		model.addAttribute("currickumClassifyType_map", currickumClassifyType_map);
-
+		// 课程总数
+		model.addAttribute("courseNum", courseNum);
+		model.addAttribute("courseQueryNum", page.getList().size());
 		String description1 = "";
 		String description2 = "";
 		String description3 = "";
@@ -375,30 +370,6 @@ public class BackEndItembankController extends BaseController {
 		model.addAttribute("description1", description1);
 		model.addAttribute("description2", description2);
 		model.addAttribute("description3", description3);
-		// 课程总数
-		model.addAttribute("courseNum", courseNum);
-		model.addAttribute("courseQueryNum", page.getList().size());
-
-		/*---------------------------------------*/
-        /*---------------Attention---------------*/
-        /*---------------------------------------*/
-		// Modified by HongYang @ 20161126
-		map.put("haventStudiedCount", haventStudied);
-		map.put("studyingCount", studying);
-		map.put("haveStudiedCount", haveStudied);
-		map.put("hasCredentialCount", hasCredential);
-		map.put("courseNumber", page.getList().size());
-		map.put("page", page);
-		map.put("PathFtp", "http://202.120.40.69:31171/ftp");
-		map.put("test", "test");
-		/*---------------------------------------*/
-        /*---------------Attention---------------*/
-        /*---------------------------------------*/
-
-		if(isMobile){
-			//return "modules/infomt/moocCourse/courseList4Mobile";
-			return renderString(response, map);
-		}
 		return "modules/infomt/moocCourse/courseList";
 	}
 
@@ -408,11 +379,6 @@ public class BackEndItembankController extends BaseController {
 	@RequestMapping(value = "courseDetails")
 	public String listCourseDetails(@RequestParam(required = false, defaultValue = "") String topicId,
 			HttpServletRequest request, HttpServletResponse response, Model model) {
-		Boolean isMobile = UserUtils.getPrincipal().isMobileLogin();
-		// Added By Yang HONG
-		HashMap<String, Object> map = new HashMap<String, Object>();
-
-		System.out.println("courseDetails isMobile: " + isMobile);
 		Curriculum c = curriculumService.get(topicId);
 
 		// 获取获得证书人数并更新数据表
@@ -459,38 +425,9 @@ public class BackEndItembankController extends BaseController {
 			}
 			model.addAttribute("allStudyLength", c.getAnnexFtpFileList().size());
 			model.addAttribute("studyLength", studyLength);
-
-			/*---------------------------------------*/
-            /*---------------Attention---------------*/
-            /*---------------------------------------*/
-			// Modified by HongYang @ 20161127
-			map.put("studyLength", studyLength);
-			map.put("annexFtpFileList", c.getAnnexFtpFileList());
-            /*---------------------------------------*/
-            /*---------------Attention---------------*/
-            /*---------------------------------------*/
 		}
 		model.addAttribute("curriculum", c);
 		model.addAttribute("canTakeTest", canTakeTest);
-
-		/*---------------------------------------*/
-        /*---------------Attention---------------*/
-        /*---------------------------------------*/
-		// Modified by HongYang @ 20161127
-		map.put("Curriculum", c);
-		map.put("canTakeTest", canTakeTest);
-		map.put("requirement", "完整学习十讲的学习内容，并于讨论区内至少发布或参与三次主题讨论");
-		map.put("evaluation", "暂无");
-		map.put("preparation", "初中二年级以上的英语水平");
-		map.put("reference", "暂无");
-		/*---------------------------------------*/
-        /*---------------Attention---------------*/
-        /*---------------------------------------*/
-
-		if(isMobile){
-			//return "modules/infomt/moocCourse/courseDetails4Mobile";
-			return renderString(response, map);
-		}
 		return "modules/infomt/moocCourse/courseDetails";
 	}
 
@@ -584,7 +521,6 @@ public class BackEndItembankController extends BaseController {
 			@RequestParam(required = false, defaultValue = "1") Integer pageNo,
 			@RequestParam(required = false, defaultValue = "5") Integer pageSize, HttpServletRequest request,
 			Model model) {
-		Boolean isMobile = UserUtils.getPrincipal().isMobileLogin();
 
 		Category category = categoryService.get(categoryId);
 		if (category == null) {
@@ -605,15 +541,13 @@ public class BackEndItembankController extends BaseController {
 		List<PaperRecord> paperRecord_list = paperRecordService
 				.getPaperRecordsByUserIdCurriculumId(UserUtils.getUser().getId(), topicId);
 		Map<String, PaperRecord> paperRecord_map = new HashMap<String, PaperRecord>();
-		Float scoreLineA = Float.parseFloat(Global.getConfig("eduTrain.scoreLineA"));
-		Float scoreLineB = Float.parseFloat(Global.getConfig("eduTrain.scoreLineB"));
 		for (int i = 0; i < paperRecord_list.size(); i++) {
 			if (paperRecord_list.get(i).getScore() != null && !paperRecord_list.get(i).getScore().equals("")) {
 				Float a = Float.parseFloat(paperRecord_list.get(i).getScore().split("/")[0]);
 				Float b = Float.parseFloat(paperRecord_list.get(i).getScore().split("/")[1]);
-				if ((a / b) > scoreLineA) {
+				if ((a / b) > 0.8) {
 					paperRecord_list.get(i).setScore_description("A");
-				} else if ((a / b) > scoreLineB) {
+				} else if ((a / b) > 0.6) {
 					paperRecord_list.get(i).setScore_description("B");
 				} else {
 					paperRecord_list.get(i).setScore_description("C");
@@ -635,9 +569,6 @@ public class BackEndItembankController extends BaseController {
 		// model.addAttribute("map", map);
 		// model.addAttribute("user", UserUtils.getUser());
 		// model.addAttribute("pageNumber", pageNo);
-		if(isMobile){
-			return "modules/infomt/moduleItembank/frontPaperRecordList4Mobile";
-		}
 		return "modules/infomt/moduleItembank/frontPaperRecordList";
 		// return "modules/infomt/moduleItembank/frontPaper";
 	}
@@ -710,9 +641,6 @@ public class BackEndItembankController extends BaseController {
 				paperRecord.setPaperid(paperid);
 			}
 		}
-		//单选多选分数
-		model.addAttribute("singleScore", Global.getConfig("eduTrain.singleScore"));
-		model.addAttribute("multiScore", Global.getConfig("eduTrain.multiScore"));
 
 		model.addAttribute("user", user);
 		model.addAttribute("map", map);
@@ -735,18 +663,18 @@ public class BackEndItembankController extends BaseController {
 		paperRecord.setId(newOrOldPaperRecord.getId());
 		model.addAttribute("paperRecord", paperRecord);
 
-//		// 工作流开始部分，向校长发送待办任务
-//		if ((paper.getNeedSchoolmaster() != null && paper.getNeedSchoolmaster().equals("TRUE"))
-//				&& (newOrOldPaperRecord.getCompleteAct() == null || !newOrOldPaperRecord.getCompleteAct().equals("true"))) {
-//			if (paperRecord.getProcInsId() != null && !paperRecord.getProcInsId().equals("")) {
-//				actProcessService.deleteProcIns(paperRecord.getProcInsId(), null);
-//			}
-//			Map<String, Object> vars = new HashMap<String, Object>();
-//			String title = "监考:" + paper.getName();
-//			vars.put("monitorGroup", ActUtils.P_TRANS_SUPERIOR_LEADER);
-//			actTaskService.startProcess(ActUtils.PD_MONITOR_EXAMINATION[0], ActUtils.PD_MONITOR_EXAMINATION[1],
-//					newOrOldPaperRecord.getId(), title, vars);
-//		}
+		// 工作流开始部分，向校长发送待办任务
+		if ((paper.getNeedSchoolmaster() != null && paper.getNeedSchoolmaster().equals("TRUE")) 
+				&& (newOrOldPaperRecord.getCompleteAct() == null || !newOrOldPaperRecord.getCompleteAct().equals("true"))) {
+			if (paperRecord.getProcInsId() != null && !paperRecord.getProcInsId().equals("")) {
+				actProcessService.deleteProcIns(paperRecord.getProcInsId(), null);
+			}
+			Map<String, Object> vars = new HashMap<String, Object>();
+			String title = "监考:" + paper.getName();
+			vars.put("monitorGroup", ActUtils.P_TRANS_SUPERIOR_LEADER);
+			actTaskService.startProcess(ActUtils.PD_MONITOR_EXAMINATION[0], ActUtils.PD_MONITOR_EXAMINATION[1],
+					newOrOldPaperRecord.getId(), title, vars);
+		}
 
 		if (isMobile) {
 			m.put("user", user);
@@ -756,8 +684,6 @@ public class BackEndItembankController extends BaseController {
 			m.put("paper", paper);
 			m.put("list", list);
 			m.put("typeid", typeid);
-			m.put("singleScore", Global.getConfig("eduTrain.singleScore"));
-			m.put("multiScore", Global.getConfig("eduTrain.multiScore"));
 			return renderString(response, m);
 		}
 		return "modules/infomt/moduleItembank/frontPaperRecordForm";
@@ -868,9 +794,9 @@ public class BackEndItembankController extends BaseController {
 		System.out.println("paperRecord_list: " + paperRecord_list);
 		List<Paper> paper_list = credentialService.getPaperListByCredentialId(credential_id);
 		System.out.println("paper_list: " + paper_list);
-		for (Paper paper : paper_list) {
+		for (PaperRecord paperRecord : paperRecord_list) {
 			boolean flag = false;
-			for (PaperRecord paperRecord : paperRecord_list) {
+			for (Paper paper : paper_list) {
 				if (paper.getId().equals(paperRecord.getPaperid())) {
 					flag = true;
 					break;
@@ -881,46 +807,23 @@ public class BackEndItembankController extends BaseController {
 				return "C";
 			}
 		}
-		
-		//假设ab证书都可以获得
-		boolean scoreA_flag = true;
-		boolean scoreB_flag = true;
-		Float scoreLineA = Float.parseFloat(Global.getConfig("eduTrain.scoreLineA"));
-		Float scoreLineB = Float.parseFloat(Global.getConfig("eduTrain.scoreLineB"));
+		boolean score_flag = false;
 		for (PaperRecord paperRecord : paperRecord_list) {
-			if(paperRecord == null || paperRecord.getScore() == null || paperRecord.equals("")){
-				scoreA_flag = false;
-				scoreB_flag = false;
-			}else {
-				System.out.println(paperRecord.getScore());
-				// System.out.println("userid: " + user_id + "; paperRecord score: "
-				// + paperRecord.getScore().replaceAll(" ", "").split("/"));
-				Float a = Float.parseFloat(paperRecord.getScore().replaceAll("\\s", "").split("/")[0]);
-				Float b = Float.parseFloat(paperRecord.getScore().replaceAll("\\s", "").split("/")[1]);
-				if ((a / b) > scoreLineB) {
-					if ((a / b) < scoreLineA) {
-						scoreA_flag = false;
-					}
-				} else {
-					scoreA_flag = false;
-					scoreB_flag = false;
-					break;
-				}
+			System.out.println(paperRecord.getScore());
+			// System.out.println("userid: " + user_id + "; paperRecord score: "
+			// + paperRecord.getScore().replaceAll(" ", "").split("/"));
+			Float a = Float.parseFloat(paperRecord.getScore().replaceAll("\\s", "").split("/")[0]);
+			Float b = Float.parseFloat(paperRecord.getScore().replaceAll("\\s", "").split("/")[1]);
+			if ((a / b) < 0.8) {
+				score_flag = true;
 			}
 		}
-		
-		//获得a
-		if(scoreA_flag){
-			System.out.println("A");
-			return "A";
-		}
-		//获得b
-		if (scoreB_flag) {
+		if (score_flag) {
 			System.out.println("B");
 			return "B";
 		}
-		System.out.println("C");
-		return "C";
+		System.out.println("A");
+		return "A";
 	}
 
 	/**
@@ -932,8 +835,6 @@ public class BackEndItembankController extends BaseController {
 			@RequestParam(required = false, defaultValue = "") String typeid, HttpServletRequest request, Model model) {
 		// FontUser fontUser = (FontUser)SessionUtil.getSession(request,
 		// SessionUtil.FONT_USER);
-		System.out.println("---savePaperForm");
-		System.out.println(paperRecord);
 		User user = UserUtils.getUser();
 		if (user != null) {
 			paperRecord.setUserid(user.getId());
@@ -1039,10 +940,6 @@ public class BackEndItembankController extends BaseController {
 		String para = ActUtils.actToUrl(act);
 		System.out.println(para);
 		formUrl.append(para);
-		Boolean isMobile=UserUtils.getPrincipal().isMobileLogin();
-		if (isMobile){
-			return "redirect:" + formUrl.toString()+"&mobileLogin=true";
-		}
 		return "redirect:" + formUrl.toString();
 	}
 }
